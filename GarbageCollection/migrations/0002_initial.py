# Generated by Django 4.0.3 on 2023-05-31 15:14

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('GarbageCollection', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_city', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Contact1', models.CharField(blank=True, default='00000000000', max_length=11, null=True)),
                ('Contact2', models.CharField(blank=True, default='00000000000', max_length=11, null=True)),
                ('Landline', models.CharField(blank=True, default='00000000000', max_length=11, null=True)),
                ('Address', models.CharField(blank=True, max_length=50)),
                ('Email_us', models.CharField(blank=True, max_length=50)),
                ('About', models.CharField(blank=True, max_length=150)),
                ('About_innstant', models.CharField(blank=True, max_length=150)),
                ('Facebook', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FooterBusinessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='', max_length=32)),
                ('start_time', models.CharField(blank=True, choices=[('Open 24 hours', 'Open 24 hours'), ('AM', (('12:00 AM', '12:00 AM'), ('01:00 AM', '01:00 AM'), ('02:00 AM', '02:00 AM'), ('03:00 AM', '03:00 AM'), ('04:00 AM', '04:00 AM'), ('05:00 AM', '05:00 AM'), ('06:00 AM', '06:00 AM'), ('07:00 AM', '07:00 AM'), ('08:00 AM', '08:00 AM'), ('09:00 AM', '09:00 AM'), ('10:00 AM', '10:00 AM'), ('11:00 AM', '11:00 AM'))), ('PM', (('12:00 PM', '12:00 PM'), ('01:00 PM', '01:00 PM'), ('02:00 PM', '02:00 PM'), ('03:00 PM', '03:00 PM'), ('04:00 PM', '04:00 PM'), ('05:00 PM', '05:00 PM'), ('06:00 PM', '06:00 PM'), ('07:00 PM', '07:00 PM'), ('08:00 PM', '08:00 PM'), ('09:00 PM', '09:00 PM'), ('10:00 PM', '10:00 PM'), ('11:00 PM', '11:00 PM')))], default='Open 24 hours', max_length=32, null=True)),
                ('end_time', models.CharField(blank=True, choices=[('Open 24 hours', 'Open 24 hours'), ('AM', (('12:00 AM', '12:00 AM'), ('01:00 AM', '01:00 AM'), ('02:00 AM', '02:00 AM'), ('03:00 AM', '03:00 AM'), ('04:00 AM', '04:00 AM'), ('05:00 AM', '05:00 AM'), ('06:00 AM', '06:00 AM'), ('07:00 AM', '07:00 AM'), ('08:00 AM', '08:00 AM'), ('09:00 AM', '09:00 AM'), ('10:00 AM', '10:00 AM'), ('11:00 AM', '11:00 AM'))), ('PM', (('12:00 PM', '12:00 PM'), ('01:00 PM', '01:00 PM'), ('02:00 PM', '02:00 PM'), ('03:00 PM', '03:00 PM'), ('04:00 PM', '04:00 PM'), ('05:00 PM', '05:00 PM'), ('06:00 PM', '06:00 PM'), ('07:00 PM', '07:00 PM'), ('08:00 PM', '08:00 PM'), ('09:00 PM', '09:00 PM'), ('10:00 PM', '10:00 PM'), ('11:00 PM', '11:00 PM')))], default='', max_length=32, null=True)),
            ],
            options={
                'verbose_name_plural': 'Business Hours',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('text', models.TextField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('text', models.TextField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PostEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=250)),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='events/')),
            ],
            options={
                'verbose_name_plural': 'Event',
            },
        ),
        migrations.CreateModel(
            name='PostNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=1000)),
                ('post_date', models.DateField(auto_now_add=True)),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
            options={
                'verbose_name_plural': 'Post News',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('age', models.IntegerField(blank=True, default=18, null=True)),
                ('contact_number', models.CharField(blank=True, default='00000000000', max_length=11, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('barangay', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('street', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('building', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('house_no', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='waste_types/')),
                ('description', models.TextField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Waste Type',
            },
        ),
        migrations.CreateModel(
            name='CreatePickup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('city', models.CharField(max_length=100)),
                ('barangay', models.CharField(default=None, max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('building', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('house_no', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('type', multiselectfield.db.fields.MultiSelectField(choices=[('Liquid Waste', 'Liquid Waste'), ('Solid Waste', 'Solid Waste'), ('Organic Waste', 'Organic Waste'), ('Recyclable Waste', 'Recyclable Waste'), ('Hazardous waste', 'Hazardous Waste')], default='', max_length=71)),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Pending', 'Pending'), ('On The Way', 'On The Way')], default='Pending', max_length=10)),
                ('deny_request', models.TextField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_request', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Pickup Request',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(max_length=50)),
                ('city', models.CharField(default='Tagbilaran City', max_length=50)),
                ('street', models.CharField(max_length=1000)),
                ('schedule', multiselectfield.db.fields.MultiSelectField(choices=[('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], default='', max_length=27)),
                ('route_image', models.ImageField(blank=True, null=True, upload_to='route_images/')),
                ('route_link', models.CharField(blank=True, max_length=5000, null=True)),
                ('type', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='waste_type_1', to='GarbageCollection.waste')),
                ('type_2', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waste_type_2', to='GarbageCollection.waste')),
                ('type_3', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waste_type_3', to='GarbageCollection.waste')),
                ('type_4', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waste_type_4', to='GarbageCollection.waste')),
                ('type_5', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waste_type_5', to='GarbageCollection.waste')),
            ],
            options={
                'verbose_name_plural': 'Collection Schedule',
            },
        ),
    ]
